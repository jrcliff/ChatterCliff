[{"/Users/justinc/Flatiron/projects/phase5/frontend/src/index.js":"1","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/SubList.js":"2","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/NewRoom.js":"3","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Subscribe.js":"4","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/ChatRooms.js":"5","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Room.js":"6"},{"size":622,"mtime":1611658987594,"results":"7","hashOfConfig":"8"},{"size":263,"mtime":1611717267443,"results":"9","hashOfConfig":"8"},{"size":1285,"mtime":1611870771312,"results":"10","hashOfConfig":"8"},{"size":893,"mtime":1611867436086,"results":"11","hashOfConfig":"8"},{"size":980,"mtime":1611874318549,"results":"12","hashOfConfig":"8"},{"size":364,"mtime":1611864842769,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"j3537p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/justinc/Flatiron/projects/phase5/frontend/src/index.js",[],["29","30"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/SubList.js",[],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/NewRoom.js",["31","32"],"import { Button, TextField } from '@material-ui/core';\nimport React, { useState, setRooms, rooms } from 'react'\n\n\nexport default function NewRoom(props) {\n    const [newRoom, setNewRoom] = useState('')\n\n    const handleSendRoom = (e) => {\n        e.preventDefault();\n        const data = newRoom\n        let reqObj = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              title: data,\n              user_id: 1,\n\n            //   user_id: props.currentUser.id,\n              \n            })\n        }\n        fetch('http://localhost:3000/chat_rooms', reqObj)\n        .then(res => res.json())\n        .then(room => props.updateNewRooms(room))\n        setNewRoom('')\n\n    }\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setNewRoom(e.target.value)\n        console.log(e.target.value);\n    }\n\n    return (\n        <div className='new-room-form'>\n            <form onSubmit={handleSendRoom } className='new-room'>\n                <TextField type='text' onChange={(e) => handleChange(e)} name='new-room'  id='new-room' placeholder='New Room' value={newRoom} ></TextField>\n                <Button type='submit' placeholder='create'></Button>\n            </form>\n        </div>\n    )\n}\n","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Subscribe.js",[],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/ChatRooms.js",["33","34"],"import React, {useState, useEffect, useLocalStorage} from 'react'\nimport Room from './Room'\nimport axios from 'axios'\nimport NewRoom from './NewRoom'\n\nexport default function ChatRooms(props) {\n    \n    const [rooms, setRooms] = useState([])\n   \n\n    useEffect(async () => {\n        \n        const roomsData = await axios(`http://localhost:3000/chat_rooms`) \n        setRooms(roomsData.data)\n        \n    }, [])\n    const handleDelete = (e) => {\n       \n        let updatedRooms = rooms.filter(room => room !== e)\n        fetch(`http://localhost:3000/chat_rooms/${e.id}`, {method: 'DELETE'})\n        setRooms(updatedRooms)\n        \n    }\n    const updateNewRooms = (room) => {\n        setRooms([...rooms, room])\n    }\n\n\n\n\n\n    \n    return (\n        \n        \n        <div>\n        <NewRoom updateNewRooms={updateNewRooms} />\n        {rooms?.map(room => <Room handleDelete={handleDelete}  handleOpenRoom={props.handleOpenRoom} key={room.id} room={room} />)}\n        </div>\n    )\n}\n","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Room.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":27,"nodeType":"41","messageId":"42","endLine":2,"endColumn":35},{"ruleId":"39","severity":1,"message":"43","line":2,"column":37,"nodeType":"41","messageId":"42","endLine":2,"endColumn":42},{"ruleId":"39","severity":1,"message":"44","line":1,"column":37,"nodeType":"41","messageId":"42","endLine":1,"endColumn":52},{"ruleId":"45","severity":1,"message":"46","line":11,"column":15,"nodeType":"47","endLine":16,"endColumn":6},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'setRooms' is defined but never used.","Identifier","unusedVar","'rooms' is defined but never used.","'useLocalStorage' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]