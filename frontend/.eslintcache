[{"/Users/justinc/Flatiron/projects/phase5/frontend/src/reportWebVitals.js":"1","/Users/justinc/Flatiron/projects/phase5/frontend/src/App.js":"2","/Users/justinc/Flatiron/projects/phase5/frontend/src/index.js":"3","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/LoginForm.js":"4","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/RegistrationForm.js":"5","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Home.js":"6","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/ChatRooms.js":"7","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Room.js":"8"},{"size":362,"mtime":1610407103932,"results":"9","hashOfConfig":"10"},{"size":2060,"mtime":1611039336220,"results":"11","hashOfConfig":"10"},{"size":622,"mtime":1610730936004,"results":"12","hashOfConfig":"10"},{"size":2331,"mtime":1611048534675,"results":"13","hashOfConfig":"10"},{"size":2196,"mtime":1610696842303,"results":"14","hashOfConfig":"10"},{"size":356,"mtime":1611055048870,"results":"15","hashOfConfig":"10"},{"size":559,"mtime":1611086344805,"results":"16","hashOfConfig":"10"},{"size":147,"mtime":1611056999165,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"j3537p",{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/justinc/Flatiron/projects/phase5/frontend/src/reportWebVitals.js",[],["38","39"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/App.js",["40","41","42","43","44","45"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/index.js",[],["46","47"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/LoginForm.js",["48","49","50","51"],"import React, { useState } from 'react'\nimport { FormGroup } from '@material-ui/core';\nimport { FormLabel } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport RegistrationForm from './RegistrationForm';\nimport { Link, Redirect } from 'react-router-dom'\n\n\nexport default function LoginForm({ Login, error }) {\n    const [details, setDetails] = useState({\n        username: '', \n        email: '', \n        password: '',\n        current_user: localStorage.getItem('current_user' || '')\n        \n    });\n\n    const submitHandler = e => {\n        e.preventDefault();\n        let username = details.username\n        let reqObj = {\n            headers: { 'Content-Type': 'application/json' },\n            method: 'POST',\n            body: JSON.stringify({ username })\n        };\n        fetch('http://localhost:3000/login', reqObj)\n        .then(res => res.json())\n        .then(user => localStorage.setItem('current_user', user))\n        console.log(details.current_user)\n        \n        \n    }\n    return (\n        localStorage.getItem('current_user') ? <Redirect to='/home' /> :\n        <form onSubmit={submitHandler}>\n            <div className='form-inner'>\n                <h2>Login</h2>\n                {(error != \"\") ? ( <div className='error'>{error}</div> ) : \"\"}\n                <div className='form-group'>\n                    <input type='text' placeholder='Username' onChange={e => setDetails({...details, username: e.target.value})} value={details.username} name='username' id='username' />\n                </div>\n                <div className='form-group'>\n                    <input type='email' placeholder='Email' value={details.email} onChange={e => setDetails({...details, email: e.target.value})}  name='email' id='email' />                \n                </div>\n                <div className='form-group'>\n                    <input type='password' placeholder='Password' value={details.password} onChange={e => setDetails({...details, password: e.target.value})} name='password' id='password' />\n                </div>\n                \n                <input type='submit' value='Login' />\n                <Link to={<RegistrationForm />} >\n                <input type='submit' value='New to us? Sign Up' /> \n\n                </Link>\n            </div>\n        </form>\n       \n    )\n}\n","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/RegistrationForm.js",["52"],"import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\n\n\nexport default function RegistrationForm(props) {\n    const userUrl = 'http://localhost:3000/users'\n    const [details, setDetails] = useState({\n        username: '', \n        email: '', \n        password: '',\n        password_confirmation: ''\n    });\n\n    const submitHandler = e => {\n        e.preventDefault();\n        const data = details\n        const reqObj = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username: data.username,\n                email: data.email\n            })\n        }\n        fetch(userUrl, reqObj)\n        .then(res => res.json())\n        .then(user => console.log(user))\n    }\n\n    return (\n       <form onSubmit={submitHandler}>\n            <div className='form-inner'>\n                <h2>SignUp</h2>\n                {/* {(error != \"\") ? ( <div className='error'>{error}</div> ) : \"\"} */}\n                <div className='form-group'>\n                    <input type='text' placeholder='Username' onChange={e => setDetails({...details, username: e.target.value})} value={details.username} name='username' id='username' />\n                </div>\n                <div className='form-group'>\n                    <input type='email' placeholder='Email' value={details.email} onChange={e => setDetails({...details, email: e.target.value})}  name='email' id='email' />                \n                </div>\n                <div className='form-group'>\n                    <input type='password' placeholder='Password' value={details.password} onChange={e => setDetails({...details, password: e.target.value})} name='password' id='password' />\n                </div>\n                <div className='form-group'>\n                    <input type='password' placeholder='Password Confirmation' value={details.password_confirmation} onChange={e => setDetails({...details, password_confirmation: e.target.value})} name='password_confirmation' id='password_confirmation' />\n                </div>\n                <input type='submit' value='Sign Up' />\n            </div>\n        </form>\n    )\n}\n","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Home.js",["53","54"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/ChatRooms.js",["55","56","57","58"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Room.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":42,"nodeType":"65","messageId":"66","endLine":4,"endColumn":48},{"ruleId":"63","severity":1,"message":"67","line":15,"column":10,"nodeType":"65","messageId":"66","endLine":15,"endColumn":15},{"ruleId":"63","severity":1,"message":"68","line":15,"column":17,"nodeType":"65","messageId":"66","endLine":15,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":33,"column":23,"nodeType":"71","messageId":"72","endLine":33,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":33,"column":62,"nodeType":"71","messageId":"72","endLine":33,"endColumn":64},{"ruleId":"69","severity":1,"message":"73","line":67,"column":20,"nodeType":"71","messageId":"72","endLine":67,"endColumn":22},{"ruleId":"59","replacedBy":"74"},{"ruleId":"61","replacedBy":"75"},{"ruleId":"63","severity":1,"message":"76","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":19},{"ruleId":"63","severity":1,"message":"77","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":19},{"ruleId":"63","severity":1,"message":"78","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":15},{"ruleId":"69","severity":1,"message":"73","line":38,"column":25,"nodeType":"71","messageId":"72","endLine":38,"endColumn":27},{"ruleId":"63","severity":1,"message":"79","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":18},{"ruleId":"63","severity":1,"message":"80","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"81","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"82","line":1,"column":37,"nodeType":"65","messageId":"66","endLine":1,"endColumn":52},{"ruleId":"63","severity":1,"message":"83","line":6,"column":12,"nodeType":"65","messageId":"66","endLine":6,"endColumn":20},{"ruleId":"63","severity":1,"message":"84","line":6,"column":22,"nodeType":"65","messageId":"66","endLine":6,"endColumn":33},{"ruleId":"85","severity":1,"message":"86","line":8,"column":15,"nodeType":"87","endLine":13,"endColumn":6},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'rooms' is assigned a value but never used.","'setRooms' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["88"],["89"],"'FormGroup' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'Redirect' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useLocalStorage' is defined but never used.","'openRoom' is assigned a value but never used.","'setOpenRoom' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]