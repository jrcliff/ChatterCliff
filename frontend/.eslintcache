[{"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/SearchRoom.js":"1","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/RoomList.js":"2","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Messages.js":"3","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/ChatRooms.js":"4","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Home.js":"5","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/NewMessage.js":"6","/Users/justinc/Flatiron/projects/phase5/frontend/src/App.js":"7","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Room.js":"8","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/RegistrationForm.js":"9","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/NewRoom.js":"10","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/LoginForm.js":"11","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Subscribe.js":"12","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/SubList.js":"13","/Users/justinc/Flatiron/projects/phase5/frontend/src/index.js":"14"},{"size":540,"mtime":1611613817088,"results":"15","hashOfConfig":"16"},{"size":367,"mtime":1611613680847,"results":"17","hashOfConfig":"16"},{"size":818,"mtime":1611613238651,"results":"18","hashOfConfig":"16"},{"size":970,"mtime":1611329819684,"results":"19","hashOfConfig":"16"},{"size":2370,"mtime":1611613969893,"results":"20","hashOfConfig":"16"},{"size":1436,"mtime":1611617593205,"results":"21","hashOfConfig":"16"},{"size":2154,"mtime":1611623430851,"results":"22","hashOfConfig":"16"},{"size":280,"mtime":1611248232318,"results":"23","hashOfConfig":"16"},{"size":2196,"mtime":1610696842303,"results":"24","hashOfConfig":"16"},{"size":1197,"mtime":1611263320983,"results":"25","hashOfConfig":"16"},{"size":2431,"mtime":1611618122989,"results":"26","hashOfConfig":"16"},{"size":694,"mtime":1611589369369,"results":"27","hashOfConfig":"16"},{"size":263,"mtime":1611589369368,"results":"28","hashOfConfig":"16"},{"size":622,"mtime":1611593182209,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j3537p",{"filePath":"32","messages":"33","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/SearchRoom.js",[],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/RoomList.js",["73","74"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Messages.js",["75"],"import React, {useState} from 'react'\nimport NewMessage from './NewMessage'\nimport Subscribe from './Subscribe'\n\n\n\nexport default function Messages(props) {\n    \n    return (\n        \n        <div>\n             <Subscribe openRoom={props.openRoom} />  \n            {props.roomMessages?.map(message => \n            <div user={message.user}>\n                <span key={message.id} user={message.user}>{message.content}</span>\n                <h2>{message.user.username}</h2>\n             </div> \n             )\n            }\n            { props.openRoom ?  <NewMessage className='new-message-bar' roomMessages={props.roomMessages} updateMessages={props.updateMessages} openRoom={props.openRoom} user={props.user} setOpenRoom={props.setOpenRoom}/> : <h2>Click on a room to Chat</h2> }\n            \n        </div>\n    )\n}\n",["76","77"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/ChatRooms.js",["78","79"],"import React, {useState, useEffect, useLocalStorage} from 'react'\nimport Room from './Room'\nimport axios from 'axios'\nimport NewRoom from './NewRoom'\nexport default function ChatRooms(props) {\n    \n    const [rooms, setRooms] = useState([])\n   \n\n    useEffect(async () => {\n        \n        const roomsData = await axios(`http://localhost:3000/chat_rooms`) \n        setRooms(roomsData.data)\n        \n    }, [])\n    const handleDelete = (e) => {\n       \n        let updatedRooms = rooms.filter(room => room !== e)\n        fetch(`http://localhost:3000/chat_rooms/${e.id}`, {method: 'DELETE'})\n        setRooms(updatedRooms)\n    }\n    const updateNewRooms = (room) => {\n        setRooms([...rooms, room])\n    }\n\n\n\n\n\n    \n    return (\n        \n        \n        <div>\n        <NewRoom updateNewRooms={updateNewRooms} />\n        {rooms?.map(room => <Room handleDelete={handleDelete}  handleOpenRoom={props.handleOpenRoom} key={room.id} room={room} />)}\n        </div>\n    )\n}\n",["80","81"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Home.js",["82","83"],"import React, { useState, useEffect } from 'react'\nimport ChatRooms from './ChatRooms'\nimport Messages from './Messages'\n// import SearchRoom from './SearchRoom';\nimport SubList from './SubList'\nimport actionCable from 'actioncable'\n\n\nconst CableApp = {}\nCableApp.cable = actionCable.createConsumer('ws://localhost:3000/cable')\n\n\n\nexport default function Home(props) {\n    const openRoomSubs = (chat_room) => {\n        fetch('http://localhost:3000/sublist')\n        .then(res => res.json())\n        .then(sublist => console.log(sublist))\n    }\n\n    const [openRoom, setOpenRoom] = useState(localStorage.getItem('openRoom') || null);\n\n    const handleOpenRoom = (room) => {\n        if(room !== undefined){\n            setOpenRoom(room)\n            localStorage.setItem('openRoom', room)\n            setRoomMessages(room.messages)\n        }\n        // const [messages, setMessages] = useState({\n        //     messages: room.messages\n        // })\n\n        console.log(room.messages)\n    }\n\n    const [roomMessages, setRoomMessages] = useState(openRoom?.messages)\n    let connection\n    useEffect(() => {\n      const cable = actionCable.createConsumer('ws://localhost:3000/cable') \n      connection = cable.subscriptions.create(\n          { channel: 'ChatRoomsChannel', chat_room: openRoom},\n          {\n              connected: () => \n              console.log('connected'),\n              received: (data) => {\n                  updateMessages(data);\n              }\n          }\n      )\n    })\n    // if (message.user === current_user)\n    const updateMessages = (newMessage) => {\n        setRoomMessages([...roomMessages, newMessage])\n         console.log(roomMessages);\n    }\n\n    console.log(openRoom);\n\n\n    return (\n        <div id='chat-container'>\n            <div id=\"side-bar\">\n            <div>\n                \n                <h2>\n                    {props.user.username}\n                </h2>\n            </div>\n            {/* <SearchRoom rooms={props.rooms} /> */}\n            <ChatRooms handleOpenRoom={handleOpenRoom} />\n            </div>\n            <div id=\"chat-window\">\n            <Messages user={props.user} cableApp={CableApp} roomMessages={roomMessages} setOpenRoom={setOpenRoom} updateMessages={updateMessages}  openRoom={openRoom} />\n            <SubList openRoomSubs={openRoomSubs} />\n            </div>\n\n            \n        </div>\n    )\n}\n",["84","85"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/NewMessage.js",["86","87"],"import React, { useState } from 'react'\nimport { render } from 'react-dom';\nimport Messages from './Messages';\n\n\nexport default function NewMessage(props) {\n    const [newMessage, setNewMessage] = useState('')\n\n    const handleSendMessage = (e) => {\n        e.preventDefault();\n        const data = newMessage\n        let reqObj = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              content: data,\n            //   user_id: sessionStorage.currentUser.id,\n\n              user_id: props.user.id,\n              chat_room_id: props.openRoom.id\n            })\n        }\n        fetch('http://localhost:3000/messages', reqObj)\n        .then(res => res.json())\n        .then(message => props.updateMessages(message))\n        props.setOpenRoom(props.openRoom)\n        console.log(props.user);\n      \n        \n    }\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setNewMessage(e.target.value)\n        console.log(e.target.value);\n    }\n\n    return (\n        <div className='new-message-form'>\n            <form onSubmit={handleSendMessage } className='new-message'>\n                <input type='text' onChange={(e) => handleChange(e)} name='new-message'  id='new-message' placeholder='New Message' value={newMessage} ></input>\n                <input type='submit' placeholder='send'></input>\n            </form>\n        </div>\n    )\n}\n","/Users/justinc/Flatiron/projects/phase5/frontend/src/App.js",["88","89","90","91","92"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Room.js",[],["93","94"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/RegistrationForm.js",["95"],"import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\n\n\nexport default function RegistrationForm(props) {\n    const userUrl = 'http://localhost:3000/users'\n    const [details, setDetails] = useState({\n        username: '', \n        email: '', \n        password: '',\n        password_confirmation: ''\n    });\n\n    const submitHandler = e => {\n        e.preventDefault();\n        const data = details\n        const reqObj = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username: data.username,\n                email: data.email\n            })\n        }\n        fetch(userUrl, reqObj)\n        .then(res => res.json())\n        .then(user => console.log(user))\n    }\n\n    return (\n       <form onSubmit={submitHandler}>\n            <div className='form-inner'>\n                <h2>SignUp</h2>\n                {/* {(error != \"\") ? ( <div className='error'>{error}</div> ) : \"\"} */}\n                <div className='form-group'>\n                    <input type='text' placeholder='Username' onChange={e => setDetails({...details, username: e.target.value})} value={details.username} name='username' id='username' />\n                </div>\n                <div className='form-group'>\n                    <input type='email' placeholder='Email' value={details.email} onChange={e => setDetails({...details, email: e.target.value})}  name='email' id='email' />                \n                </div>\n                <div className='form-group'>\n                    <input type='password' placeholder='Password' value={details.password} onChange={e => setDetails({...details, password: e.target.value})} name='password' id='password' />\n                </div>\n                <div className='form-group'>\n                    <input type='password' placeholder='Password Confirmation' value={details.password_confirmation} onChange={e => setDetails({...details, password_confirmation: e.target.value})} name='password_confirmation' id='password_confirmation' />\n                </div>\n                <input type='submit' value='Sign Up' />\n            </div>\n        </form>\n    )\n}\n",["96","97"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/NewRoom.js",["98","99"],"import React, { useState, setRooms, rooms } from 'react'\n\n\nexport default function NewRoom(props) {\n    const [newRoom, setNewRoom] = useState({})\n\n    const handleSendRoom = (e) => {\n        e.preventDefault();\n        const data = newRoom\n        let reqObj = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              title: data,\n              user_id: 1,\n\n            //   user_id: props.currentUser.id,\n              \n            })\n        }\n        fetch('http://localhost:3000/chat_rooms', reqObj)\n        .then(res => res.json())\n        .then(room => props.updateNewRooms(room))\n\n    }\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setNewRoom(e.target.value)\n        console.log(e.target.value);\n    }\n\n    return (\n        <div className='new-room-form'>\n            <form onSubmit={handleSendRoom } className='new-room'>\n                <input type='text' onChange={(e) => handleChange(e)} name='new-room'  id='new-room' placeholder='New Room' value={newRoom} ></input>\n                <input type='submit' placeholder='create'></input>\n            </form>\n        </div>\n    )\n}\n",["100","101"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/LoginForm.js",["102","103","104","105"],"import React, { useState } from 'react'\nimport { FormGroup } from '@material-ui/core';\nimport { FormLabel } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport RegistrationForm from './RegistrationForm';\nimport { Link, Redirect } from 'react-router-dom'\n\n\nexport default function LoginForm({ Login, error, props }) {\n    const [details, setDetails] = useState({\n        username: '', \n        email: '', \n        password: '',\n        \n    });\n\n    const submitHandler = e => {\n        e.preventDefault();\n        let user = {\n            username: details.username,\n            email: details.email,\n            password: details.password\n\n        }\n        let reqObj = {\n            headers: { 'Content-Type': 'application/json' },\n            method: 'POST',\n            body: JSON.stringify(user)\n        };\n        fetch('http://localhost:3000/login', reqObj)\n        .then(res => res.json())\n        .then(user => Login(user))\n        .then(user => console.log(user))\n        // props.Login(user)\n        // console.log(details)\n    }\n\n    // console.log(props.currentUser)\n    return (\n        localStorage.getItem('current_user') ? <Redirect to='/home' /> :\n        <form onSubmit={(e) => submitHandler(e)}>\n            <div className='form-inner'>\n                <h2>Login</h2>\n                {(error != \"\") ? ( <div className='error'>{error}</div> ) : \"\"}\n                <div className='form-group'>\n                    <input type='text' placeholder='Username' onChange={e => setDetails({...details, username: e.target.value})} value={details.username} name='username' id='username' />\n                </div>\n                <div className='form-group'>\n                    <input type='email' placeholder='Email' value={details.email} onChange={e => setDetails({...details, email: e.target.value})}  name='email' id='email' />                \n                </div>\n                <div className='form-group'>\n                    <input type='password' placeholder='Password' value={details.password} onChange={e => setDetails({...details, password: e.target.value})} name='password' id='password' />\n                </div>\n                \n                <input type='submit' value='Login' />\n                <Link to={<RegistrationForm />} >\n                <input type='submit' value='New to us? Sign Up' /> \n\n                </Link>\n            </div>\n        </form>\n       \n    )\n}\n\n","/Users/justinc/Flatiron/projects/phase5/frontend/src/components/Subscribe.js",[],["106","107"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/components/SubList.js",[],["108","109"],"/Users/justinc/Flatiron/projects/phase5/frontend/src/index.js",[],{"ruleId":"110","severity":1,"message":"111","line":6,"column":44,"nodeType":"112","messageId":"113","endLine":6,"endColumn":46},{"ruleId":"114","severity":2,"message":"115","line":7,"column":17,"nodeType":"116","messageId":"117","endLine":9,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"118","severity":1,"message":"126","line":1,"column":37,"nodeType":"120","messageId":"121","endLine":1,"endColumn":52},{"ruleId":"127","severity":1,"message":"128","line":10,"column":15,"nodeType":"112","endLine":15,"endColumn":6},{"ruleId":"122","replacedBy":"129"},{"ruleId":"124","replacedBy":"130"},{"ruleId":"118","severity":1,"message":"131","line":40,"column":7,"nodeType":"120","messageId":"121","endLine":40,"endColumn":17},{"ruleId":"127","severity":1,"message":"132","line":40,"column":20,"nodeType":"133","endLine":49,"endColumn":8},{"ruleId":"122","replacedBy":"134"},{"ruleId":"124","replacedBy":"135"},{"ruleId":"118","severity":1,"message":"136","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},{"ruleId":"118","severity":1,"message":"137","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":16},{"ruleId":"118","severity":1,"message":"138","line":4,"column":42,"nodeType":"120","messageId":"121","endLine":4,"endColumn":48},{"ruleId":"118","severity":1,"message":"139","line":10,"column":9,"nodeType":"120","messageId":"121","endLine":10,"endColumn":18},{"ruleId":"118","severity":1,"message":"140","line":17,"column":17,"nodeType":"120","messageId":"121","endLine":17,"endColumn":25},{"ruleId":"118","severity":1,"message":"141","line":35,"column":17,"nodeType":"120","messageId":"121","endLine":35,"endColumn":25},{"ruleId":"118","severity":1,"message":"142","line":38,"column":9,"nodeType":"120","messageId":"121","endLine":38,"endColumn":12},{"ruleId":"122","replacedBy":"143"},{"ruleId":"124","replacedBy":"144"},{"ruleId":"118","severity":1,"message":"145","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":18},{"ruleId":"122","replacedBy":"146"},{"ruleId":"124","replacedBy":"147"},{"ruleId":"118","severity":1,"message":"148","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"118","severity":1,"message":"149","line":1,"column":37,"nodeType":"120","messageId":"121","endLine":1,"endColumn":42},{"ruleId":"122","replacedBy":"150"},{"ruleId":"124","replacedBy":"151"},{"ruleId":"118","severity":1,"message":"152","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":19},{"ruleId":"118","severity":1,"message":"153","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":19},{"ruleId":"118","severity":1,"message":"154","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":44,"column":25,"nodeType":"157","messageId":"158","endLine":44,"endColumn":27},{"ruleId":"122","replacedBy":"159"},{"ruleId":"124","replacedBy":"160"},{"ruleId":"122","replacedBy":"161"},{"ruleId":"124","replacedBy":"162"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["163"],"no-negated-in-lhs",["164"],"'useLocalStorage' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching",["163"],["164"],"'connection' is assigned a value but never used.","Assignments to the 'connection' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["163"],["164"],"'render' is defined but never used.","'Messages' is defined but never used.","'Switch' is defined but never used.","'adminUser' is assigned a value but never used.","'setRooms' is assigned a value but never used.","'setError' is assigned a value but never used.","'obj' is assigned a value but never used.",["163"],["164"],"'Redirect' is defined but never used.",["163"],["164"],"'setRooms' is defined but never used.","'rooms' is defined but never used.",["163"],["164"],"'FormGroup' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["163"],["164"],["163"],["164"],"no-global-assign","no-unsafe-negation"]